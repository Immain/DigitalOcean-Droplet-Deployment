- hosts: localhost
  vars_files:
    - ./group_vars/vars.yml
    - ./group_vars/vault.yml
  tasks:

# Adds the SSH key to the Digital Ocean account
    - name: add public ssh key to digitalocean account
      digital_ocean_sshkey:
        name:
        oauth_token: '{{ oauth_token }}' # Digital Ocean Personal Access Token
        ssh_pub_key: "{{ lookup('file', ssh_public_key_path) }}" # SSH Public Key
        state: present
      register: sshkey_result

# Creates a new Digital Ocean Droplet and assigns the SSH key
    - name: create a new droplet assigning the key
      digital_ocean_droplet:
        name: '{{ droplet_name }}'
        oauth_token: '{{ oauth_token }}' # Digital Ocean Personal Access Token
        size: s-1vcpu-2gb-amd # Droplet Size
        region: sfo3 # Digital Ocean Region ID
        image: ubuntu-22-04-x64 # Droplet Image
        project: '{{ project_name }}'
        wait_timeout: 700
        unique_name: yes
        ssh_keys: ['{{ sshkey_result.data.ssh_key.id }}']
        state: present
      register: droplet_result

# Tag Droplets
    - name: Gather information about the droplet
      community.digitalocean.digital_ocean_droplet_info:
        oauth_token: "{{ oauth_token }}"
        name: '{{ droplet_name }}'
      register: droplet_info

    - name: Tag the Droplet
      community.digitalocean.digital_ocean_tag:
        oauth_token: "{{ oauth_token }}"
        name: "{{ item }}"
        resource_id: "{{ droplet_info.data[0].id }}"
        state: present
      loop: # Add Your Designated Tag Names for your Digitial Ocean Droplet
        - staging
        - test
        - devops
      when: droplet_info.data | length > 0

# Saves the IP and hostname to the local hosts file /etc/hosts
    - name: Save IP and hostname to local hosts file /etc/hosts
      become: yes
      lineinfile:
        path: /etc/hosts
        regexp: '.*{{ droplet_name }}$'
        line: "{{ droplet_result.data.droplet.networks.v4[0].ip_address }} {{ droplet_name }}" # Save IP and hostname to local hosts file /etc/hosts

# Dynamically add new host entry with the name specified by the {{ droplet_name }} variable
    - name: Add new droplet to in-memory inventory
      add_host:
        name: "{{ droplet_name }}"
        ansible_host: "{{ droplet_result.data.droplet.networks.v4[0].ip_address }}"
        ansible_user: root
        ansible_ssh_private_key_file: "{{ ssh_private_key_path }}"

# Waits for 2 minutes to let the Droplet load
    - name: Pause for 2 Minutes to let Droplet load
      pause:
        minutes: 2

# Waits for SSH to come up, if the SSH connection is not ready, the playbook will fail.
    - name: Wait for SSH to come up
      wait_for:
        host: "{{ droplet_result.data.droplet.networks.v4[0].ip_address }}"
        port: 22
        delay: 60
        timeout: 320
        state: started

# Connects to the new Droplet and updates the apt packages
- hosts: YourHostName
  vars:
    ansible_python_interpreter: /usr/bin/python3
  tasks:

# Ubuntu Update
  - name: Update and upgrade apt packages
    apt:
      update_cache: yes
      force_apt_get: yes
      upgrade: dist
